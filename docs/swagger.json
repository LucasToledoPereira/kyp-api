{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Return a JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Return a JWT",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/middlewares.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/refresh": {
            "get": {
                "description": "Refresh JWT Token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT Token",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/pets": {
            "get": {
                "description": "Return all available pets",
                "produces": [
                    "application/json"
                ],
                "summary": "Return all available pets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResultWrapper-array_entities_Pet"
                        }
                    }
                }
            },
            "post": {
                "description": "Used to create a new pet info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new pet",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pets_commands.CreatePetCommandRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResultWrapper-entities_Pet"
                        }
                    }
                }
            }
        },
        "/pets/{id}/publish": {
            "patch": {
                "description": "Change pet status to PUBLISHED",
                "produces": [
                    "application/json"
                ],
                "summary": "Change pet status to PUBLISHED",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResultWrapper-entities_Pet"
                        }
                    }
                }
            }
        },
        "/pets/{id}/unpublish": {
            "patch": {
                "description": "Change pet status to PUBLISHED",
                "produces": [
                    "application/json"
                ],
                "summary": "Change pet status to UNPUBLISHED",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResultWrapper-entities_Pet"
                        }
                    }
                }
            }
        },
        "/private/health": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Check if the api is working properly",
                "produces": [
                    "application/json"
                ],
                "summary": "Check the api health",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Should be Bearer ...",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResultWrapper-any"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": " ",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_commands.CreateUserCommandRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ResultWrapper-entities_User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Pet": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/pets_enums.PetStatus"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "middlewares.Login": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ResultWrapper-any": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "error": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ResultWrapper-array_entities_Pet": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Pet"
                    }
                },
                "error": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ResultWrapper-entities_Pet": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/entities.Pet"
                },
                "error": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.ResultWrapper-entities_User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/entities.User"
                },
                "error": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "pets_commands.CreatePetCommandRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "description": "Pet Name",
                    "type": "string"
                }
            }
        },
        "pets_enums.PetStatus": {
            "type": "string",
            "enum": [
                "DRAFT",
                "UNPUBLISHED",
                "PUBLISHED"
            ],
            "x-enum-varnames": [
                "DRAFT",
                "UNPUBLISHED",
                "PUBLISHED"
            ]
        },
        "user_commands.CreateUserCommandRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "description": "User Name",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "description": "Service to serve a pet information to the app.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}